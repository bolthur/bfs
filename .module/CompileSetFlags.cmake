
function(compile_set_flags)
  # clang / gcc compiler flags
  enable_compiler_flag_if_supported("-fstack-protector-all")
  enable_compiler_flag_if_supported("-Wall")
  enable_compiler_flag_if_supported("-Werror")
  enable_compiler_flag_if_supported("-Wextra")
  enable_compiler_flag_if_supported("-Wpedantic")
  enable_compiler_flag_if_supported("-Wpacked")
  enable_compiler_flag_if_supported("-Wredundant-decls")
  enable_compiler_flag_if_supported("-Wmisleading-indentation")
  enable_compiler_flag_if_supported("-Wundef")
  enable_compiler_flag_if_supported("-Wpacked-bitfield-compat")
  enable_compiler_flag_if_supported("-Wrestrict")
  enable_compiler_flag_if_supported("-Wpacked-not-aligned")
  enable_compiler_flag_if_supported("-Wshadow")
  enable_compiler_flag_if_supported("-Wmissing-noreturn")
  enable_compiler_flag_if_supported("-Wmissing-format-attribute")
  enable_compiler_flag_if_supported("-Wduplicated-branches")
  enable_compiler_flag_if_supported("-Wduplicated-cond")
  enable_compiler_flag_if_supported("-fno-exceptions")
  enable_compiler_flag_if_supported("-fomit-frame-pointer")
  enable_compiler_flag_if_supported("-Wstrict-prototypes")
  enable_compiler_flag_if_supported("-Wmissing-prototypes")
  enable_compiler_flag_if_supported("-Wconversion")
  enable_compiler_flag_if_supported("-fanalyzer")
  # clang/gcc linker flags
  enable_linker_flag_if_supported("-lc")

  # clang/gcc relase and debug options
  enable_compiler_flag_debug_if_supported("-g")
  enable_compiler_flag_debug_if_supported("-O0")
  enable_compiler_flag_debug_if_supported("-ggdb3")
  enable_compiler_flag_release_if_supported("-g")
  enable_compiler_flag_release_if_supported("-O2")
  enable_compiler_flag_release_if_supported("-ggdb3")

  # bubble up flags
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}" PARENT_SCOPE)
  set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE}" PARENT_SCOPE)
  set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG}" PARENT_SCOPE)
  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS}" PARENT_SCOPE)
endfunction()
